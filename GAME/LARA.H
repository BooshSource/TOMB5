#ifndef LARA_H
#define LARA_H

#include "SPECTYPES.H"

#define LARA_DRAW_TYPE_NORMAL   1
#define LARA_DRAW_TYPE_YOUNG    2
#define LARA_DRAW_TYPE_BUNHEAD  3
#define LARA_DRAW_TYPE_OFFICE   4
#define LARA_DRAW_TYPE_ARTIC    5

#define LARA_FREEFALL_SPEED 131

enum lara_anim_state
{
	STATE_LARA_WALK_FORWARD = 0,
	STATE_LARA_RUN_FORWARD = 1,
	STATE_LARA_STOP = 2,
	STATE_LARA_JUMP_FORWARD = 3,
	STATE_LARA_POSE = 4,
	STATE_LARA_RUN_BACK = 5,
	STATE_LARA_TURN_RIGHT_SLOW = 6,
	STATE_LARA_TURN_LEFT_SLOW = 7,
	STATE_LARA_DEATH = 8,
	STATE_LARA_FREEFALL = 9,
	STATE_LARA_HANG = 10,
	STATE_LARA_REACH = 11,
	STATE_LARA_UNUSED2 = 12,
	STATE_LARA_UNDERWATER_STOP = 13,
	STATE_LARA_GRAB_TO_FALL = 14,
	STATE_LARA_JUMP_PREPARE = 15,
	STATE_LARA_WALK_BACK = 16,
	STATE_LARA_UNDERWATER_FORWARD = 17,
	STATE_LARA_UNDERWATER_INERTIA = 18,
	STATE_LARA_GRABBING = 19,
	STATE_LARA_TURN_FAST = 20,
	STATE_LARA_WALK_RIGHT = 21,
	STATE_LARA_WALK_LEFT = 22,
	STATE_LARA_ROLL_BACKWARD = 23,
	STATE_LARA_SLIDE_FORWARD = 24,
	STATE_LARA_JUMP_BACK = 25,
	STATE_LARA_JUMP_LEFT = 26,
	STATE_LARA_JUMP_RIGHT = 27,
	STATE_LARA_JUMP_UP = 28,
	STATE_LARA_FALL_BACKWARD = 29,
	STATE_LARA_SHIMMY_LEFT = 30,
	STATE_LARA_SHIMMY_RIGHT = 31,
	STATE_LARA_SLIDE_BACK = 32,
	STATE_LARA_ONWATER_STOP = 33,
	STATE_LARA_ONWATER_FORWARD = 34,
	STATE_LARA_UNDERWATER_DIVING = 35,
	STATE_LARA_PUSHABLE_PUSH = 36,
	STATE_LARA_PUSHABLE_PULL = 37,
	STATE_LARA_PUSHABLE_GRAB = 38,
	STATE_LARA_PICKUP = 39,
	STATE_LARA_SWITCH_DOWN = 40,
	STATE_LARA_SWITCH_UP = 41,
	STATE_LARA_INSERT_KEY = 42,
	STATE_LARA_INSERT_PUZZLE = 43,
	STATE_LARA_WATER_DEATH = 44,
	STATE_LARA_ROLL_FORWARD = 45,
	STATE_LARA_BOULDER_DEATH = 46,
	STATE_LARA_ONWATER_BACK = 47,
	STATE_LARA_ONWATER_LEFT = 48,
	STATE_LARA_ONWATER_RIGHT = 49,
	STATE_LARA_USE_MIDAS = 50,
	STATE_LARA_DIE_MIDAS = 51,
	STATE_LARA_SWANDIVE_BEGIN = 52,
	STATE_LARA_SWANDIVE_END = 53,
	STATE_LARA_HANDSTAND = 54,
	STATE_LARA_ONWATER_EXIT = 55,
	STATE_LARA_LADDER_IDLE = 56,
	STATE_LARA_LADDER_UP = 57,
	STATE_LARA_LADDER_LEFT = 58,
	STATE_LARA_UNUSED5 = 59,
	STATE_LARA_LADDER_RIGHT = 60,
	STATE_LARA_LADDER_DOWN = 61,
	STATE_LARA_UNUSED6 = 62,
	STATE_LARA_UNUSED7 = 63,
	STATE_LARA_UNUSED8 = 64,
	STATE_LARA_WADE_FORWARD = 65,
	STATE_LARA_UNDERWATER_TURNAROUND = 66,
	STATE_LARA_FLARE_PICKUP = 67,
	STATE_LARA_JUMP_ROLL = 68,
	STATE_LARA_UNUSED10 = 69,
	STATE_LARA_ZIPLINE_RIDE = 70,
	STATE_LARA_CROUCH_IDLE = 71,
	STATE_LARA_CROUCH_ROLL = 72,
	STATE_LARA_SPRINT = 73,
	STATE_LARA_SPRINT_ROLL = 74,
	STATE_LARA_MONKEYSWING_IDLE = 75,
	STATE_LARA_MONKEYSWING_FORWARD = 76,
	STATE_LARA_MONKEYSWING_LEFT = 77,
	STATE_LARA_MONKEYSWING_RIGHT = 78,
	STATE_LARA_MONKEYSWING_TURNAROUND = 79,
	STATE_LARA_CRAWL_IDLE = 80,
	STATE_LARA_CRAWL_FORWARD = 81,
	STATE_LARA_MONKEYSWING_TURN_LEFT = 82,
	STATE_LARA_MONKEYSWING_TURN_RIGHT = 83,
	STATE_LARA_CRAWL_TURN_LEFT = 84,
	STATE_LARA_CRAWL_TURN_RIGHT = 85,
	STATE_LARA_CRAWL_BACK = 86,
	STATE_LARA_CLIMB_TO_CRAWL = 87,
	STATE_LARA_CRAWL_TO_CLIMB = 88,
	STATE_LARA_MISC_CONTROL = 89,
	STATE_LARA_ROPE_TURN_LEFT = 90,
	STATE_LARA_ROPE_TURN_RIGHT = 91,
	STATE_LARA_GIANT_BUTTON_PUSH = 92,
	STATE_LARA_TRAPDOOR_FLOOR_OPEN = 93,
	STATE_LARA_UNUSED11 = 94,
	STATE_LARA_ROUND_HANDLE = 95,
	STATE_LARA_COGWHEEL = 96,
	STATE_LARA_LEVERSWITCH_PUSH = 97,
	STATE_LARA_HOLE = 98,
	STATE_LARA_POLE_IDLE = 99,
	STATE_LARA_POLE_UP = 100,
	STATE_LARA_POLE_DOWN = 101,
	STATE_LARA_POLE_TURN_LEFT = 102,
	STATE_LARA_POLE_TURN_RIGHT = 103,
	STATE_LARA_PULLEY = 104,
	STATE_LARA_CROUCH_TURN_LEFT = 105,
	STATE_LARA_CROUCH_TURN_RIGHT = 106,
	STATE_LARA_CLIMB_CORNER_LEFT_OUTER = 107,
	STATE_LARA_CLIMB_CORNER_RIGHT_OUTER = 108,
	STATE_LARA_CLIMB_CORNER_LEFT_INNER = 109,
	STATE_LARA_CLIMB_CORNER_RIGHT_INNER = 110,
	STATE_LARA_ROPE_IDLE = 111,
	STATE_LARA_ROPE_CLIMB_UP = 112,
	STATE_LARA_ROPE_CLIMB_DOWN = 113,
	STATE_LARA_ROPE_SWING = 114,
	STATE_LARA_LADDER_TO_HANDS = 115,
	STATE_LARA_POSITION_CORRECTOR = 116,
	STATE_LARA_DOUBLEDOORS_PUSH = 117,
	STATE_LARA_DOZY = 118,
	STATE_LARA_TIGHTROPE_IDLE = 119,
	STATE_LARA_TIGHTROPE_TURNAROUND = 120,
	STATE_LARA_TIGHTROPE_FORWARD = 121,
	STATE_LARA_TIGHTROPE_BALANCING_LEFT = 122,
	STATE_LARA_TIGHTROPE_BALANCING_RIGHT = 123,
	STATE_LARA_TIGHTROPE_ENTER = 124,
	STATE_LARA_TIGHTROPE_EXIT = 125,
	STATE_LARA_DOVESWITCH = 126,
	STATE_LARA_TIGHTROPE_RESTORE_BALANCE = 127,
	STATE_LARA_BARS_SWING = 128,
	STATE_LARA_BARS_JUMP = 129,
	STATE_LARA_UNUSED12 = 130,
	STATE_LARA_RADIO_LISTENING = 131,
	STATE_LARA_RADIO_OFF = 132,
	STATE_LARA_UNUSED13 = 133,
	STATE_LARA_UNUSED14 = 134,
	STATE_LARA_UNUSED15 = 135,
	STATE_LARA_UNUSED16 = 136,
	STATE_LARA_PICKUP_FROM_CHEST = 137,

	NUM_LARA_STATES
};

enum lara_anim
{
	ANIMATION_LARA_RUN = 0,
	ANIMATION_LARA_WALK_FORWARD = 1,
	ANIMATION_LARA_END_WALK_RIGHT = 2,
	ANIMATION_LARA_END_WALK_LEFT = 3,
	ANIMATION_LARA_WALK_TO_RUN_RIGHT = 4,
	ANIMATION_LARA_WALK_TO_RUN_LEFT = 5,
	ANIMATION_LARA_STAY_TO_RUN = 6,
	ANIMATION_LARA_RUN_TO_WALK_RIGHT = 7,
	ANIMATION_LARA_RUN_TO_STAY_LEFT = 8,
	ANIMATION_LARA_RUN_TO_WALK_LEFT = 9,
	ANIMATION_LARA_RUN_TO_STAY_RIGHT = 10,
	ANIMATION_LARA_STAY_SOLID = 11,                         // Intermediate animation used to reset flags and states.
	ANIMATION_LARA_TURN_RIGHT_SLOW = 12,                    // Used once before the fast one if all weapon are in holsters
	ANIMATION_LARA_TURN_LEFT_SLOW = 13,                     // Used once before the fast one if all weapon are in holsters
	ANIMATION_LARA_LANDING_FORWARD_BOTH = 14,               // Original landing animation in the TR1 betas... But removed
	ANIMATION_LARA_LANDING_FORWARD_BOTH_CONTINUE = 15,      // Original landing animation in the TR1 betas... But removed
	ANIMATION_LARA_JUMPING_FORWARD_RIGHT = 16,              // OK
	ANIMATION_LARA_START_FLY_FORWARD_RIGHT = 17,            // OK
	ANIMATION_LARA_JUMPING_FORWARD_LEFT = 18,               // OK
	ANIMATION_LARA_START_FLY_FORWARD_LEFT = 19,             // OK
	ANIMATION_LARA_WALK_FORWARD_BEGIN = 20,
	ANIMATION_LARA_WALK_FORWARD_BEGIN_CONTINUE = 21,
	ANIMATION_LARA_START_FREE_FALL = 22,
	ANIMATION_LARA_FREE_FALL_LONG = 23,
	ANIMATION_LARA_LANDING_HARD = 24,
	ANIMATION_LARA_LANDING_DEATH = 25,
	ANIMATION_LARA_STAY_TO_GRAB = 26,
	ANIMATION_LARA_STAY_TO_GRAB_CONTINUE = 27,
	ANIMATION_LARA_TRY_HANG_VERTICAL = 28,
	ANIMATION_LARA_BEGIN_HANGING_VERTICAL = 29,
	ANIMATION_LARA_STOP_HANG_VERTICAL = 30,
	ANIMATION_LARA_LANDING_LIGHT = 31,
	ANIMATION_LARA_SMASH_JUMP = 32,
	ANIMATION_LARA_SMASH_JUMP_CONTINUE = 33,
	ANIMATION_LARA_FREE_FALL_FORWARD = 34,
	ANIMATION_LARA_FREE_FALL_MIDDLE = 35,
	ANIMATION_LARA_FREE_FALL_LONG_NO_HURT = 36,
	ANIMATION_LARA_HANG_TO_RELEASE = 37,                    // Was meant to play when Lara is hanging at a ledge and the player releases the Action key
	ANIMATION_LARA_STOP_WALK_BACK_RIGHT = 38,
	ANIMATION_LARA_STOP_WALK_BACK_LEFT = 39,
	ANIMATION_LARA_WALK_BACK = 40,
	ANIMATION_LARA_START_WALK_BACK = 41,
	ANIMATION_LARA_CLIMB_3CLICK = 42,
	ANIMATION_LARA_UNKNOWN2 = 43,                           // Was meant to be used like the 52 but finally it got removed
	ANIMATION_LARA_ROTATE_RIGHT = 44,
	ANIMATION_LARA_JUMPING_FORWARD_TO_FREEFALL = 45,        // Used after the forward jump if she keeps falling
	ANIMATION_LARA_FLY_FORWARD_TRY_TO_HANG = 46,
	ANIMATION_LARA_ROLL_ALTERNATE = 47,                     // Unused
	ANIMATION_LARA_ROLL_END_ALTERNATE = 48,                 // Unused
	ANIMATION_LARA_FREE_FALL_NO_HURT = 49,
	ANIMATION_LARA_CLIMB_2CLICK = 50,
	ANIMATION_LARA_CLIMB_2CLICK_END = 51,
	ANIMATION_LARA_CLIMB_2CLICK_END_RUNNING = 52,           // Used if the player keeps pressing the UP cursor key

	ANIMATION_LARA_WALL_SMASH_LEFT = 53,
	ANIMATION_LARA_WALL_SMASH_RIGHT = 54,
	ANIMATION_LARA_RUN_UP_STEP_RIGHT = 55,
	ANIMATION_LARA_RUN_UP_STEP_LEFT = 56,
	ANIMATION_LARA_WALK_UP_STEP_RIGHT = 57,
	ANIMATION_LARA_WALK_UP_STEP_LEFT = 58,
	ANIMATION_LARA_WALK_DOWN_LEFT = 59,
	ANIMATION_LARA_WALK_DOWN_RIGHT = 60,
	ANIMATION_LARA_WALK_DOWN_BACK_LEFT = 61,
	ANIMATION_LARA_WALK_DOWN_BACK_RIGHT = 62,

	ANIMATION_LARA_PULL_SWITCH_DOWN = 63,
	ANIMATION_LARA_PULL_SWITCH_UP = 64,

	ANIMATION_LARA_WALK_LEFT = 65,
	ANIMATION_LARA_WALK_LEFT_END = 66,
	ANIMATION_LARA_WALK_RIGHT = 67,
	ANIMATION_LARA_WALK_RIGHT_END = 68,
	ANIMATION_LARA_ROTATE_LEFT = 69,
	ANIMATION_LARA_SLIDE_FORWARD = 70,
	ANIMATION_LARA_SLIDE_FORWARD_END = 71,
	ANIMATION_LARA_SLIDE_FORWARD_STOP = 72,
	ANIMATION_LARA_STAY_JUMP_SIDES = 73,
	ANIMATION_LARA_JUMP_BACK_BEGIN = 74,
	ANIMATION_LARA_JUMP_BACK = 75,
	ANIMATION_LARA_JUMP_FORWARD_BEGIN = 76,
	ANIMATION_LARA_CONTINUE_FLY_FORWARD = 77,
	ANIMATION_LARA_JUMP_LEFT_BEGIN = 78,
	ANIMATION_LARA_JUMP_LEFT = 79,
	ANIMATION_LARA_JUMP_RIGHT_BEGIN = 80,
	ANIMATION_LARA_JUMP_RIGHT = 81,
	ANIMATION_LARA_LANDING_MIDDLE = 82,
	ANIMATION_LARA_FORWARD_TO_FREE_FALL = 83,
	ANIMATION_LARA_LEFT_TO_FREE_FALL = 84,
	ANIMATION_LARA_RIGHT_TO_FREE_FALL = 85,

	ANIMATION_LARA_UNDERWATER_SWIM_FORWARD = 86,
	ANIMATION_LARA_UNDERWATER_SWIM_SOLID = 87,
	ANIMATION_LARA_RUN_BACK_BEGIN = 88,
	ANIMATION_LARA_RUN_BACK = 89,
	ANIMATION_LARA_RUN_BACK_END = 90,
	ANIMATION_LARA_TRY_HANG_VERTICAL_BEGIN = 91,              // Native bug: glitchy intermediate animation.
	ANIMATION_LARA_LANDING_FROM_RUN = 92,
	ANIMATION_LARA_FREE_FALL_BACK = 93,
	ANIMATION_LARA_FLY_FORWARD_TRY_HANG = 94,
	ANIMATION_LARA_TRY_HANG_SOLID = 95,
	ANIMATION_LARA_HANG_IDLE = 96,                            // Main climbing animation... triggers
	ANIMATION_LARA_CLIMB_ON = 97,
	ANIMATION_LARA_FREE_FALL_TO_LONG = 98,
	ANIMATION_LARA_FALL_CROUCHING_LANDING = 99,               // Unused
	ANIMATION_LARA_FREE_FALL_TO_SIDE_LANDING = 100,
	ANIMATION_LARA_FREE_FALL_TO_SIDE_LANDING_ALTERNATE = 101, // Maybe it was used at the beginning of a forward jump when the player presses Action? Maybe it was used like this with the original beta anim 73
	ANIMATION_LARA_CLIMB_ON_END = 102,
	ANIMATION_LARA_STAY_IDLE = 103,
	ANIMATION_LARA_START_SLIDE_BACKWARD = 104,
	ANIMATION_LARA_SLIDE_BACKWARD = 105,
	ANIMATION_LARA_SLIDE_BACKWARD_END = 106,
	ANIMATION_LARA_UNDERWATER_SWIM_TO_IDLE = 107,
	ANIMATION_LARA_UNDERWATER_IDLE = 108,
	ANIMATION_LARA_UNDERWARER_IDLE_TO_SWIM = 109,
	ANIMATION_LARA_ONWATER_IDLE = 110,

	ANIMATION_LARA_CLIMB_OUT_OF_WATER = 111,
	ANIMATION_LARA_FREE_FALL_TO_UNDERWATER = 112,
	ANIMATION_LARA_ONWATER_DIVE_ALTERNATE = 113,              // This one is not used
	ANIMATION_LARA_UNDERWATER_TO_ONWATER = 114,
	ANIMATION_LARA_ONWATER_DIVE = 115,
	ANIMATION_LARA_ONWATER_SWIM_FORWARD = 116,
	ANIMATION_LARA_ONWATER_SWIM_FORWARD_TO_IDLE = 117,
	ANIMATION_LARA_ONWATER_IDLE_TO_SWIM = 118,
	ANIMATION_LARA_FREE_FALL_TO_UNDERWATER_ALTERNATE = 119,   // This one is used
	ANIMATION_LARA_START_OBJECT_MOVING = 120,
	ANIMATION_LARA_STOP_OBJECT_MOVING = 121,
	ANIMATION_LARA_OBJECT_PULL = 122,
	ANIMATION_LARA_OBJECT_PUSH = 123,
	ANIMATION_LARA_UNDERWATER_DEATH = 124,
	ANIMATION_LARA_AH_FORWARD = 125,
	ANIMATION_LARA_AH_BACKWARD = 126,
	ANIMATION_LARA_AH_LEFT = 127,
	ANIMATION_LARA_AH_RIGHT = 128,
	ANIMATION_LARA_UNDERWATER_SWITCH = 129,
	ANIMATION_LARA_UNDERWATER_PICKUP = 130,
	ANIMATION_LARA_USE_KEY = 131,
	ANIMATION_LARA_ONWATER_DEATH = 132,
	ANIMATION_LARA_RUN_TO_DIE = 133,
	ANIMATION_LARA_USE_PUZZLE = 134,
	ANIMATION_LARA_PICKUP = 135,
	ANIMATION_LARA_CLIMB_LEFT = 136,
	ANIMATION_LARA_CLIMB_RIGHT = 137,
	ANIMATION_LARA_STAY_TO_DEATH = 138,
	ANIMATION_LARA_SQUASH_BOULDER = 139,
	ANIMATION_LARA_ONWATER_IDLE_TO_SWIM_BACK = 140,
	ANIMATION_LARA_ONWATER_SWIM_BACK = 141,
	ANIMATION_LARA_ONWATER_SWIM_BACK_TO_IDLE = 142,
	ANIMATION_LARA_ONWATER_SWIM_LEFT = 143,
	ANIMATION_LARA_ONWATER_SWIM_RIGHT = 144,
	ANIMATION_LARA_JUMP_TO_DEATH = 145,
	ANIMATION_LARA_ROLL_BEGIN = 146,
	ANIMATION_LARA_ROLL_CONTINUE = 147,
	ANIMATION_LARA_ROLL_END = 148,
	ANIMATION_LARA_SPIKED = 149,
	ANIMATION_LARA_OSCILLATE_HANG_ON = 150,
	ANIMATION_LARA_LANDING_ROLL = 151,
	ANIMATION_LARA_FISH_TO_UNDERWATER1 = 152,
	ANIMATION_LARA_FREE_FALL_FISH = 153,
	ANIMATION_LARA_FISH_TO_UNDERWATER2 = 154,
	ANIMATION_LARA_FREE_FALL_FISH_TO_DEATH = 155,
	ANIMATION_LARA_START_FLY_LIKE_FISH_LEFT = 156,
	ANIMATION_LARA_START_FLY_LIKE_FISH_RIGHT = 157,
	ANIMATION_LARA_FREE_FALL_FISH_START = 158,
	ANIMATION_LARA_CLIMB_ON2 = 159,
	/*
	* TR2 AND ABOVE (160-216)
	*/
	ANIMATION_LARA_STAND_TO_LADDER = 160,
	ANIMATION_LARA_LADDER_UP = 161,
	ANIMATION_LARA_LADDER_UP_STOP_RIGHT = 162,
	ANIMATION_LARA_LADDER_UP_STOP_LEFT = 163,
	ANIMATION_LARA_LADDER_IDLE = 164,
	ANIMATION_LARA_LADDER_UP_START = 165,
	ANIMATION_LARA_LADDER_DOWN_STOP_LEFT = 166,
	ANIMATION_LARA_LADDER_DOWN_STOP_RIGHT = 167,
	ANIMATION_LARA_LADDER_DOWN = 168,
	ANIMATION_LARA_LADDER_DOWN_START = 169,
	ANIMATION_LARA_LADDER_RIGHT = 170,
	ANIMATION_LARA_LADDER_LEFT = 171,
	ANIMATION_LARA_LADDER_HANG = 172,
	ANIMATION_LARA_LADDER_HANG_TO_IDLE = 173,
	ANIMATION_LARA_LADDER_TO_STAND = 174,
	// ANIMATION_LARA_UNKNOWN5 = 175,                   // Unknown use
	ANIMATION_LARA_ONWATER_TO_WADE_SHALLOW = 176,
	ANIMATION_LARA_WADE = 177,
	ANIMATION_LARA_RUN_TO_WADE_LEFT = 178,
	ANIMATION_LARA_RUN_TO_WADE_RIGHT = 179,
	ANIMATION_LARA_WADE_TO_RUN_LEFT = 180,
	ANIMATION_LARA_WADE_TO_RUN_RIGHT = 181,

	ANIMATION_LARA_LADDER_BACKFLIP_START = 182,
	ANIMATION_LARA_LADDER_BACKFLIP_END = 183,
	ANIMATION_LARA_WADE_TO_STAY_RIGHT = 184,
	ANIMATION_LARA_WADE_TO_STAY_LEFT = 185,
	ANIMATION_LARA_STAY_TO_WADE = 186,
	ANIMATION_LARA_LADDER_UP_HANDS = 187,
	ANIMATION_LARA_LADDER_DOWN_HANDS = 188,
	ANIMATION_LARA_FLARE_THROW = 189,
	ANIMATION_LARA_ONWATER_TO_WADE_DEEP = 190,
	ANIMATION_LARA_ONWATER_TO_LAND_LOW = 191,
	ANIMATION_LARA_UNDERWATER_TO_WADE = 192,
	ANIMATION_LARA_ONWATER_TO_WADE = 193,
	ANIMATION_LARA_LADDER_TO_HANDS_DOWN = 194,
	ANIMATION_LARA_SWITCH_SMALL_DOWN = 195,
	ANIMATION_LARA_SWITCH_SMALL_UP = 196,
	ANIMATION_LARA_BUTTON_PUSH = 197,
	ANIMATION_LARA_UNDERWATER_SWIM_TO_STILL_HUDDLE = 198,
	ANIMATION_LARA_UNDERWATER_SWIM_TO_STILL_SPRAWL = 199,
	ANIMATION_LARA_UNDERWATER_SWIM_TO_STILL_MEDIUM = 200,
	ANIMATION_LARA_LADDER_TO_HANDS_RIGHT = 201,
	ANIMATION_LARA_LADDER_TO_HANDS_LEFT = 202,
	ANIMATION_LARA_UNDERWATER_ROLL_BEGIN = 203,
	ANIMATION_LARA_FLARE_PICKUP = 204,
	ANIMATION_LARA_UNDERWATER_ROLL_END = 205,
	ANIMATION_LARA_UNDERWATER_FLARE_PICKUP = 206,
	ANIMATION_LARA_RUNNING_JUMP_ROLL_BEGIN = 207,
	ANIMATION_LARA_SOMERSAULT = 208,
	ANIMATION_LARA_RUNNING_JUMP_ROLL_END = 209,
	ANIMATION_LARA_STANDING_JUMP_ROLL_BEGIN = 210,
	ANIMATION_LARA_STANDING_JUMP_ROLL_END = 211,
	ANIMATION_LARA_BACKWARDS_JUMP_ROLL_BEGIN = 212,
	ANIMATION_LARA_BACKWARDS_JUMP_ROLL_END = 213,

	ANIMATION_LARA_TR2_KICK = 214,
	ANIMATION_LARA_TR2_ZIPLINE_GRAB = 215,
	ANIMATION_LARA_TR2_ZIPLINE_RIDE = 216,
	ANIMATION_LARA_TR2_ZIPLINE_FALL = 217,

	/*
	* TR3 AND ABOVE (214-312)
	*/
	ANIMATION_LARA_TR345_ZIPLINE_GRAB = 214,
	ANIMATION_LARA_TR345_ZIPLINE_RIDE = 215,
	ANIMATION_LARA_TR345_ZIPLINE_FALL = 216,
	ANIMATION_LARA_TR345_STAND_TO_CROUCH = 217,

	ANIMATION_LARA_SLIDE_FORWARD_TO_RUN = 246,      // Slide to run!

	ANIMATION_LARA_JUMP_FORWARD_BEGIN_TO_GRAB = 248,
	ANIMATION_LARA_JUMP_FORWARD_END_TO_GRAB = 249,
	ANIMATION_LARA_RUN_TO_GRAB_RIGHT = 250,
	ANIMATION_LARA_RUN_TO_GRAB_LEFT = 251,

	ANIMATION_LARA_RUN_TO_SPRINT_LEFT = 224,
	ANIMATION_LARA_RUN_TO_SPRINT_RIGHT = 225,
	ANIMATION_LARA_SPRINT = 223,
	ANIMATION_LARA_SPRINT_SLIDE_STAND_RIGHT = 226,
	ANIMATION_LARA_SPRINT_SLIDE_STAND_RIGHT_BETA = 227,     // BETA SPRINT-SLIDE STAND
	ANIMATION_LARA_SPRINT_SLIDE_STAND_LEFT = 228,
	ANIMATION_LARA_SPRINT_SLIDE_STAND_LEFT_BETA = 229,      // BETA SPRINT-SLIDE STAND
	ANIMATION_LARA_SPRINT_TO_ROLL_LEFT = 230,
	ANIMATION_LARA_SPRINT_TO_ROLL_LEFT_BETA = 231,          // BETA SPRINT ROLL
	ANIMATION_LARA_SPRINT_ROLL_LEFT_TO_RUN = 232,
	ANIMATION_LARA_SPRINT_TO_ROLL_RIGHT = 308,
	ANIMATION_LARA_SPRINT_ROLL_RIGHT_TO_RUN = 309,
	ANIMATION_LARA_SPRINT_TO_ROLL_ALTERNATE_BEGIN = 240,     // Not used natively
	ANIMATION_LARA_SPRINT_TO_ROLL_ALTERNATE_CONTINUE = 241,  // Not used natively
	ANIMATION_LARA_SPRINT_TO_ROLL_ALTERNATE_END = 242,       // Not used natively
	ANIMATION_LARA_SPRINT_TO_RUN_LEFT = 243,
	ANIMATION_LARA_SPRINT_TO_RUN_RIGHT = 244,
	ANIMATION_LARA_SPRINT_TO_CROUCH_LEFT = 310,
	ANIMATION_LARA_SPRINT_TO_CROUCH_RIGHT = 311,

	ANIMATION_LARA_MONKEY_GRAB = 233,
	ANIMATION_LARA_MONKEY_IDLE = 234,
	ANIMATION_LARA_MONKEY_FALL = 235,
	ANIMATION_LARA_MONKEY_FORWARD = 236,
	ANIMATION_LARA_MONKEY_STOP_LEFT = 237,
	ANIMATION_LARA_MONKEY_STOP_RIGHT = 238,
	ANIMATION_LARA_MONKEY_IDLE_TO_FORWARD_LEFT = 239,
	ANIMATION_LARA_MONKEY_IDLE_TO_FORWARD_RIGHT = 252,
	ANIMATION_LARA_MONKEY_STRAFE_LEFT = 253,
	ANIMATION_LARA_MONKEY_STRAFE_LEFT_END = 254,
	ANIMATION_LARA_MONKEY_STRAFE_RIGHT = 255,
	ANIMATION_LARA_MONKEY_STRAFE_RIGHT_END = 256,
	ANIMATION_LARA_MONKEY_TURN_AROUND = 257,                 // Use Titak's animation from TREP patch
	ANIMATION_LARA_MONKEY_TURN_LEFT = 271,
	ANIMATION_LARA_MONKEY_TURN_RIGHT = 272,
	ANIMATION_LARA_MONKEY_TURN_LEFT_EARLY_END = 283,
	ANIMATION_LARA_MONKEY_TURN_LEFT_LATE_END = 284,
	ANIMATION_LARA_MONKEY_TURN_RIGHT_EARLY_END = 285,
	ANIMATION_LARA_MONKEY_TURN_RIGHT_LATE_END = 286,


	ANIMATION_LARA_CROUCH_ROLL_FORWARD_BEGIN = 218,     // Not used natively
	ANIMATION_LARA_CROUCH_ROLL_FORWARD_BEGIN_ALTERNATE = 247,    // Not used
	ANIMATION_LARA_CROUCH_ROLL_FORWARD_CONTINUE = 219,  // Not used natively
	ANIMATION_LARA_CROUCH_ROLL_FORWARD_END = 220,       // Not used natively
	ANIMATION_LARA_CROUCH_TO_STAND = 221,
	ANIMATION_LARA_CROUCH_IDLE = 222,
	ANIMATION_LARA_CROUCH_PREPARE = 245,
	ANIMATION_LARA_CROUCH_IDLE_SMASH = 265,             // Not used natively
	ANIMATION_LARA_CROUCH_TO_CRAWL_BEGIN = 258,
	ANIMATION_LARA_CROUCH_TO_CRAWL_CONTINUE = 273,
	ANIMATION_LARA_CROUCH_TO_CRAWL_END = 264,

	ANIMATION_LARA_CRAWL_TO_CROUCH_BEGIN = 259,
	ANIMATION_LARA_CRAWL_TO_CROUCH_END = 274,
	ANIMATION_LARA_CRAWL_FORWARD = 260,
	ANIMATION_LARA_CRAWL_IDLE_TO_FORWARD = 261,
	ANIMATION_LARA_CRAWL_BACKWARD = 276,
	ANIMATION_LARA_CRAWL_IDLE_TO_BACKWARD = 275,
	ANIMATION_LARA_CRAWL_IDLE = 263,
	ANIMATION_LARA_CRAWL_FORWARD_TO_IDLE_BEGIN_RIGHT = 262,
	ANIMATION_LARA_CRAWL_FORWARD_TO_IDLE_END_RIGHT = 266,
	ANIMATION_LARA_CRAWL_FORWARD_TO_IDLE_BEGIN_LEFT = 267,
	ANIMATION_LARA_CRAWL_FORWARD_TO_IDLE_END_LEFT = 268,
	ANIMATION_LARA_CRAWL_BACKWARD_TO_IDLE_BEGIN_RIGHT = 277,
	ANIMATION_LARA_CRAWL_BACKWARD_TO_IDLE_END_RIGHT = 278,
	ANIMATION_LARA_CRAWL_BACKWARD_TO_IDLE_BEGIN_LEFT = 279,
	ANIMATION_LARA_CRAWL_BACKWARD_TO_IDLE_END_LEFT = 280,
	ANIMATION_LARA_CRAWL_TURN_LEFT = 269,
	ANIMATION_LARA_CRAWL_TURN_LEFT_END = 281,
	ANIMATION_LARA_CRAWL_TURN_RIGHT = 270,
	ANIMATION_LARA_CRAWL_TURN_RIGHT_END = 282,

	ANIMATION_LARA_HANG_TO_CROUCH_BEGIN = 287,
	ANIMATION_LARA_HANG_TO_CROUCH_END = 288,
	ANIMATION_LARA_CRAWL_TO_HANG_BEGIN = 289,
	ANIMATION_LARA_CRAWL_TO_HANG_CONTINUE = 290,
	ANIMATION_LARA_CRAWL_TO_HANG_END = 302,

	ANIMATION_LARA_CROUCH_PICKUP = 291,
	ANIMATION_LARA_CROUCH_PICKUP_FLARE = 312,
	ANIMATION_LARA_CRAWL_PICKUP = 292,           // Not natively used - make it work

	ANIMATION_LARA_CROUCH_SMASH_FORWARD = 293,
	ANIMATION_LARA_CROUCH_SMASH_BACKWARD = 294,
	ANIMATION_LARA_CROUCH_SMASH_RIGHT = 295,
	ANIMATION_LARA_CROUCH_SMASH_LEFT = 296,

	ANIMATION_LARA_CRAWL_SMASH_FORWARD = 297,
	ANIMATION_LARA_CRAWL_SMASH_BACKWARD = 298,
	ANIMATION_LARA_CRAWL_SMASH_RIGHT = 299,
	ANIMATION_LARA_CRAWL_SMASH_LEFT = 300,

	ANIMATION_LARA_CRAWL_DEATH = 301,
	ANIMATION_LARA_CROUCH_ABORT = 303,

	ANIMATION_LARA_RUN_TO_CROUCH_LEFT_BEGIN = 304,
	ANIMATION_LARA_RUN_TO_CROUCH_RIGHT_BEGIN = 305,
	ANIMATION_LARA_RUN_TO_CROUCH_LEFT_END = 306,
	ANIMATION_LARA_RUN_TO_CROUCH_RIGHT_END = 307,
	/*
	* TR4 AND ABOVE (313-444)
	*/
	ANIMATION_LARA_DOOR_OPEN_FORWARD = 313,
	ANIMATION_LARA_DOOR_OPEN_BACK = 314,
	ANIMATION_LARA_DOOR_KICK = 315,
	ANIMATION_LARA_GIANT_BUTTON_PUSH = 316,
	ANIMATION_LARA_FLOOR_TRAPDOOR_OPEN = 317,
	ANIMATION_LARA_CEILING_TRAPDOOR_OPEN = 318,
	ANIMATION_LARA_ROUND_HANDLE_GRAB_CLOCKWISE = 319,
	ANIMATION_LARA_ROUND_HANDLE_GRAB_COUNTERCLOCKWISE = 320,
	ANIMATION_LARA_COGWHEEL_PULL = 321,
	ANIMATION_LARA_COGWHEEL_GRAB = 322,
	ANIMATION_LARA_COGWHEEL_UNGRAB = 323,
	ANIMATION_LARA_LEVERSWITCH_PUSH = 324,
	ANIMATION_LARA_HOLE_GRAB = 325,
	ANIMATION_LARA_STAY_TO_POLE_GRAB = 326,
	ANIMATION_LARA_POLE_JUMP = 327,
	ANIMATION_LARA_POLE_IDLE = 328,
	ANIMATION_LARA_POLE_CLIMB_UP = 329,
	ANIMATION_LARA_POLE_FALL = 330,
	ANIMATION_LARA_JUMP_FORWARD_TO_POLE_GRAB = 331,
	ANIMATION_LARA_POLE_TURN_LEFT_BEGIN = 332,
	ANIMATION_LARA_POLE_TURN_RIGHT_BEGIN = 333,
	ANIMATION_LARA_POLE_IDLE_TO_CLIMB_DOWN = 334,
	ANIMATION_LARA_POLE_CLIMB_DOWN = 335,
	ANIMATION_LARA_POLE_CLIMB_DOWN_TO_IDLE = 336,
	ANIMATION_LARA_JUMP_UP_TO_POLE_GRAB = 337,
	ANIMATION_LARA_POLE_CLIMB_UP_INBETWEEN = 338,
	ANIMATION_LARA_PULLEY_GRAB = 339,
	ANIMATION_LARA_PULLEY_PULL = 340,
	ANIMATION_LARA_PULLEY_UNGRAB = 341,
	ANIMATION_LARA_POLE_GRAB_TO_STAY = 342,
	// ANIMATION_LARA_UNKNOWN8 = 343,
	ANIMATION_LARA_POLE_TURN_LEFT_END = 344,
	// ANIMATION_LARA_UNKNOWN9 = 345,
	ANIMATION_LARA_POLE_TURN_RIGHT_END = 346,
	ANIMATION_LARA_ROUND_HANDLE_PUSH_RIGHT_BEGIN = 347,
	ANIMATION_LARA_ROUND_HANDLE_PUSH_RIGHT_CONTINUE = 348,
	ANIMATION_LARA_ROUND_HANDLE_PUSH_RIGHT_END = 349,
	ANIMATION_LARA_ROUND_HANDLE_PUSH_LEFT_BEGIN = 350,
	ANIMATION_LARA_ROUND_HANDLE_PUSH_LEFT_CONTINUE = 351,
	ANIMATION_LARA_ROUND_HANDLE_PUSH_LEFT_END = 352,
	ANIMATION_LARA_CROUCH_TURN_LEFT = 353,
	ANIMATION_LARA_CROUCH_TURN_RIGHT = 354,
	ANIMATION_LARA_HANG_AROUND_LEFT_OUTER_BEGIN = 355,
	ANIMATION_LARA_HANG_AROUND_LEFT_OUTER_END = 356,
	ANIMATION_LARA_HANG_AROUND_RIGHT_OUTER_BEGIN = 357,
	ANIMATION_LARA_HANG_AROUND_RIGHT_OUTER_END = 358,
	ANIMATION_LARA_HANG_AROUND_LEFT_INNER_BEGIN = 359,
	ANIMATION_LARA_HANG_AROUND_LEFT_INNER_END = 360,
	ANIMATION_LARA_HANG_AROUND_RIGHT_INNER_BEGIN = 361,
	ANIMATION_LARA_HANG_AROUND_RIGHT_INNER_END = 362,
	ANIMATION_LARA_LADDER_AROUND_LEFT_OUTER_BEGIN = 363,
	ANIMATION_LARA_LADDER_AROUND_LEFT_OUTER_END = 364,
	ANIMATION_LARA_LADDER_AROUND_RIGHT_OUTER_BEGIN = 365,
	ANIMATION_LARA_LADDER_AROUND_RIGHT_OUTER_END = 366,
	ANIMATION_LARA_LADDER_AROUND_LEFT_INNER_BEGIN = 367,
	ANIMATION_LARA_LADDER_AROUND_LEFT_INNER_END = 368,
	ANIMATION_LARA_LADDER_AROUND_RIGHT_INNER_BEGIN = 369,
	ANIMATION_LARA_LADDER_AROUND_RIGHT_INNER_END = 370,
	ANIMATION_LARA_MONKEY_TO_ROPE_BEGIN = 371,
	ANIMATION_LARA_TRAIN_DEATH = 372,

	ANIMATION_LARA_MONKEY_TO_ROPE_END = 373,
	ANIMATION_LARA_ROPE_IDLE = 374,              // Review all rope animations!
	ANIMATION_LARA_ROPE_DOWN_BEGIN = 375,
	ANIMATION_LARA_ROPE_UP = 376,
	ANIMATION_LARA_ROPE_IDLE_TO_SWING_SOFT = 377,                  // Unused
	ANIMATION_LARA_ROPE_GRAB_TO_FALL = 378,                        // Unused
	ANIMATION_LARA_ROPE_JUMP_TO_GRAB = 379,
	ANIMATION_LARA_ROPE_IDLE_TO_BACKFLIP = 380,                    // Unused
	ANIMATION_LARA_ROPE_SWING_TO_FALL_SEMIFRONT = 381,             // Unused
	ANIMATION_LARA_ROPE_SWING_TO_FALL_MIDDLE = 382,                // Unused
	ANIMATION_LARA_ROPE_SWING_TO_FALL_BACK = 383,                  // Unused

	ANIMATION_LARA_ROPE_IDLE_TO_SWING_SEMIMIDDLE = 388,            // Unused
	ANIMATION_LARA_ROPE_IDLE_TO_SWING_HALFMIDDLE = 389,            // Unused
	ANIMATION_LARA_ROPE_SWING_TO_FALL_FRONT = 390,                 // Unused
	ANIMATION_LARA_ROPE_GRAB_TO_FALL_ALTERNATE = 391,              // Unused

	ANIMATION_LARA_ROPE_SWING_FORWARD_SEMIHARD = 394,              // The only one used!
	ANIMATION_LARA_ROPE_LADDER_TO_HANDS_DOWN_ALTERNATE = 395,      // Unused, make it work? (used in the TR4 demo if I'm right?) (then you will need to remove all the StateID changes related to the rope animations)
	ANIMATION_LARA_ROPE_SWING_BACK_CONTINUE = 396,                 // Unused
	ANIMATION_LARA_ROPE_SWING_BACK_END = 397,                      // Unused
	ANIMATION_LARA_ROPE_SWING_BACK_BEGIN = 398,                    // Unused
	ANIMATION_LARA_ROPE_SWING_FORWARD_SOFT = 399,                  // Unused

	ANIMATION_LARA_ROPE_SWING_FORWARD_HARD = 404,                   // Not found... Uhh, unused
	ANIMATION_LARA_ROPE_CHANGE_ROPE = 405,                          // Unused
	ANIMATION_LARA_ROPE_SWING_TO_TRY_HANG_FRONT2 = 406,             // Not sure it's used?
	ANIMATION_LARA_ROPE_SWING_TO_TRY_HANG_MIDDLE = 407,             // Not sure it's used?
	ANIMATION_LARA_ROPE_SWING_BLOCK = 408,                          // Unused
	ANIMATION_LARA_ROPE_SWING_TO_TRY_HANG_SEMIMIDDLE = 409,         // Not sure it's used?
	ANIMATION_LARA_ROPE_SWING_TO_TRY_HANG_FRONT3 = 410,             // Not sure it's used?



	ANIMATION_LARA_DOUBLEDOORS_PUSH = 412,
	ANIMATION_LARA_BIG_BUTTON_PUSH = 413,
	ANIMATION_LARA_JUMPSWITCH = 414,
	ANIMATION_LARA_UNDERWATER_PULLEY = 415,
	ANIMATION_LARA_UNDERWATER_DOOR_OPEN = 416,
	ANIMATION_LARA_PUSHABLE_PUSH_TO_STAND = 417,
	ANIMATION_LARA_PUSHABLE_PULL_TO_STAND = 418,
	ANIMATION_LARA_CROWBAR_USE_ON_WALL = 419,
	ANIMATION_LARA_CROWBAR_USE_ON_FLOOR = 420,
	ANIMATION_LARA_CRAWL_JUMP_DOWN = 421,
	ANIMATION_LARA_HARP_PLAY = 422,
	ANIMATION_LARA_PUT_TRIDENT = 423,
	ANIMATION_LARA_PICKUP_PEDESTAL_HIGH = 424,
	ANIMATION_LARA_PICKUP_PEDESTAL_LOW = 425,
	ANIMATION_LARA_ROTATE_SENET = 426,
	ANIMATION_LARA_TORCH_LIGHT_1 = 427,
	ANIMATION_LARA_TORCH_LIGHT_2 = 428,
	ANIMATION_LARA_TORCH_LIGHT_3 = 429,
	ANIMATION_LARA_TORCH_LIGHT_4 = 430,
	ANIMATION_LARA_TORCH_LIGHT_5 = 431,
	ANIMATION_LARA_DETONATOR_USE = 432,

	ANIMATION_LARA_CORRECT_POSITION_FRONT = 433,           // Unused
	ANIMATION_LARA_CORRECT_POSITION_LEFT = 434,            // Unused
	ANIMATION_LARA_CORRECT_POSITION_RIGHT = 435,           // Unused

	ANIMATION_LARA_CROWBAR_USE_ON_FLOOR_FAIL = 436,        // Unused
	ANIMATION_LARA_tr4_DEATH_MAGIC_tr5_USE_KEYCARD = 437,  // Unused?
	ANIMATION_LARA_DEATH_BLOWUP = 438,
	ANIMATION_LARA_PICKUP_SARCOPHAGUS = 439,
	ANIMATION_LARA_DRAG = 440,
	ANIMATION_LARA_BINOCULARS = 441,
	ANIMATION_LARA_DEATH_BIG_SCORPION = 442,
	ANIMATION_LARA_tr4_DEATH_SETH_tr5_ELEVATOR_SMASH = 443,
	ANIMATION_LARA_BEETLE_PUT = 444,
	/*
	* TR5 AND ABOVE (445-473)
	*/
	ANIMATION_LARA_ELEVATOR_RECOVER = 443,
	ANIMATION_LARA_DOZY = 445,
	ANIMATION_LARA_TIGHTROPE_WALK = 446,
	ANIMATION_LARA_TIGHTROPE_WALK_TO_STAND = 447,
	ANIMATION_LARA_TIGHTROPE_STAND = 448,
	ANIMATION_LARA_TIGHTROPE_WALK_TO_STAND_CAREFUL = 449,
	ANIMATION_LARA_TIGHTROPE_STAND_TO_WALK = 450,
	ANIMATION_LARA_TIGHTROPE_TURN = 451,
	ANIMATION_LARA_TIGHTROPE_LOOSE_LEFT = 452,
	ANIMATION_LARA_TIGHTROPE_RECOVER_LEFT = 453,
	ANIMATION_LARA_TIGHTROPE_FALL_LEFT = 454,
	ANIMATION_LARA_TIGHTROPE_LOOSE_RIGHT = 455,
	ANIMATION_LARA_TIGHTROPE_RECOVER_RIGHT = 456,
	ANIMATION_LARA_TIGHTROPE_FALL_RIGHT = 457,
	ANIMATION_LARA_TIGHTROPE_START = 458,
	ANIMATION_LARA_TIGHTROPE_FINISH = 459,
	ANIMATION_LARA_DOVESWITCH_TURN = 460,
	ANIMATION_LARA_BARS_GRAB = 461,
	ANIMATION_LARA_BARS_SWING = 462,
	ANIMATION_LARA_BARS_JUMP = 463,
	ANIMATION_LARA_LOOT_CABINET = 464,
	ANIMATION_LARA_LOOT_DRAWER = 465,
	ANIMATION_LARA_LOOT_SHELF = 466,
	ANIMATION_LARA_RADIO_BEGIN = 467,
	ANIMATION_LARA_RADIO_IDLE = 468,
	ANIMATION_LARA_RADIO_END = 469,
	ANIMATION_LARA_VALVE_TURN = 470,
	ANIMATION_LARA_CROWBAR_USE_ON_WALL2 = 471,
	ANIMATION_LARA_LOOT_CHEST = 472,
	ANIMATION_LARA_LADDER_TO_CROUCH = 473,

	NUM_LARA_ANIMS
};

enum lara_mesh
{
	LM_HIPS = 0,
	LM_LTHIGH = 1,
	LM_LSHIN = 2,
	LM_LFOOT = 3,
	LM_RTHIGH = 4,
	LM_RSHIN = 5,
	LM_RFOOT = 6,
	LM_TORSO = 7,
	LM_RINARM = 8,
	LM_ROUTARM = 9,
	LM_RHAND = 10,
	LM_LINARM = 11,
	LM_LOUTARM = 12,
	LM_LHAND = 13,
	LM_HEAD = 14,

	NUM_LARA_MESHES
};


extern short angle; // offset 0xA0650
extern short elevation; // offset 0xA0652
extern struct ITEM_INFO* lara_item; // offset 0xA2048
extern unsigned short DashTimer; // offset 0xA2044
extern struct lara_info lara; // offset 0xA57DC

extern void(*lara_control_routines[])(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void(*lara_collision_routines[])(struct ITEM_INFO* item, struct COLL_INFO* coll);

extern void lara_as_pbleapoff(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_parallelbars(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_trfall(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_trwalk(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_trpose(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void GetTighRopeFallOff(long Regularity);
extern void LookLeftRight();
extern void LookUpDown();
extern void ResetLook();
extern void lara_col_jumper(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_default_col(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_wade(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_fastdive(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_swandive(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_roll2(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_roll(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_slideback(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_fallback(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_leftjump(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_rightjump(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_backjump(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_slide(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_stepleft(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_stepright(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_back(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_compress(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_land(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_splat(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_fastfall(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_death(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_turn_l(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_turn_r(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_fastback(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_pose(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_run(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_walk(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_pulley(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_turnswitch(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_controlledl(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_controlled(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_deathslide(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_wade(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_waterout(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_gymnast(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_fastdive(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_swandive(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_special(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_usepuzzle(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_usekey(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_switchoff(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_switchon(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_pickupflare(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_pickup(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_ppready(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_pullblock(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_pushblock(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_slideback(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_fallback(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_leftjump(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_rightjump(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_backjump(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_slide(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_stepleft(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_stepright(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_fastturn(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_fastturn(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_null(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_back(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_compress(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_splat(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_intcornerr(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_intcornerl(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_extcornerr(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_extcornerl(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void SetCornerAnim(struct ITEM_INFO* item, struct COLL_INFO* coll, short rot, short flip);
extern void lara_col_hangright(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_hangright(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_hangleft(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_hangleft(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_hang(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_hang(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern int CanLaraHangSideways(struct ITEM_INFO* item, struct COLL_INFO* coll, short angle);
extern void lara_void_func(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_fastfall(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_death(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_turn_l(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_turn_r(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_fastback(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_run(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_walk(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_reach(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_reach(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_forwardjump(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_forwardjump(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_upjump(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_upjump(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_stop(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_stop(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_climbroped(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_climbrope(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_ropefwd(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_roper(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_ropel(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_rope(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_rope(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void ApplyVelocityToRope(int node, unsigned short angle, unsigned short n);
extern void UpdateRopeSwing(struct ITEM_INFO* item);
extern void JumpOffRope(struct ITEM_INFO* item);
extern void FallFromRope(struct ITEM_INFO* item);
extern void lara_col_poledown(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_poleup(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_poleright(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_poleleft(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_polestat(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_monkey180(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_monkey180(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_hangturnr(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_hangturnlr(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_hangturnl(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_monkeyr(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_monkeyr(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_monkeyl(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_monkeyl(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_monkeyswing(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_monkeyswing(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_hang2(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_hang2(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern short TestMonkeyRight(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern short TestMonkeyLeft(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern short GetDirOctant(long rot);
extern void MonkeySwingSnap(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void MonkeySwingFall(struct ITEM_INFO* item);
extern void lara_col_dashdive(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_dashdive(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_dash(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_dash(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_crawl2hang(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_crawlb(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_crawlb(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_all4turnr(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_all4turnlr(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_all4turnl(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_crawl(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_crawl(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_all4s(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_all4s(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_duck(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_duck(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_col_ducklr(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_duckr(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_as_duckl(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void LaraAboveWater(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern int TestHangSwingIn(struct ITEM_INFO* item, short angle);
extern int LaraHangLeftCornerTest(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern int LaraHangRightCornerTest(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern int IsValidHangPos(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern int LaraHangTest(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void SnapLaraToEdgeOfBlock(struct ITEM_INFO* item, struct COLL_INFO* coll, short angle);
extern int LaraTestHangOnClimbWall(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void LaraSlideEdgeJump(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void LaraDeflectEdgeJump(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void lara_slide_slope(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern void LaraCollideStop(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern int TestWall(struct ITEM_INFO* item, long front, long right, long down);
extern int TestLaraVault(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern int LaraTestClimbStance(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern int LaraTestEdgeCatch(struct ITEM_INFO* item, struct COLL_INFO* coll, long* edge);
extern int LaraDeflectEdgeDuck(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern int LaraDeflectEdge(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern int LaraHitCeiling(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern int LaraLandedBad(struct ITEM_INFO* l, struct COLL_INFO* coll);
extern int LaraFallen(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern int TestLaraSlide(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern short LaraCeilingFront(struct ITEM_INFO* item, short ang, long dist, long h);
extern short LaraFloorFront(struct ITEM_INFO* item, short ang, long dist);
extern void GetLaraCollisionInfo(struct ITEM_INFO* item, struct COLL_INFO* coll);
extern int GetLaraJointPos(struct PHD_VECTOR* arg1, int arg2);
extern void AnimateLara(struct ITEM_INFO* item);

#endif